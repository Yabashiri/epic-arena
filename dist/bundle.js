var Arena;(function(Arena){class ArenaObject{constructor(){}
loadImage(game,path){game.load.image(this.name,path+`${this.name}.png`);}
get getDisplayName(){return this.display_name;}
get getName(){return this.name;}
get getDescription(){return this.description;}
addTapEvent(game){this.sprite.inputEnabled=true;let image=game.add.sprite(Arena.Global.Constants.descImageX,Arena.Global.Constants.descImageY,this.name);this.sprite.events.onInputDown.add(()=>{Arena.State.Play.updateDescription(this,game);});}}
Arena.ArenaObject=ArenaObject;})(Arena||(Arena={}));var Arena;(function(Arena){class Chakra{constructor(){this.value=[0,0,0,0];if(Arena.Global.connectionDetails.turn==true)
this.addRandomChakra();}
generateRandomChakra(){return Math.floor(Math.random()*4);}
addRandomChakra(){this.value[this.generateRandomChakra()]++;console.log(this.value);}
addTurnChakra(){for(let i=0;i<=2;i++)
this.addRandomChakra();}
getTotalChakra(){return this.value[0]+this.value[1]+this.value[2]+this.value[3];}
addChakraUI(game){this.chakraUI=game.add.group();this.addChakraImages(game);this.addChakraText(game);this.addTextToGroup();}
addChakraImages(game){let current_sprite=game.add.sprite(293,58,"tai");this.chakraUI.add(current_sprite);current_sprite=game.add.sprite(0,0,"blood").alignTo(current_sprite,Phaser.RIGHT_TOP,31);this.chakraUI.add(current_sprite);current_sprite=game.add.sprite(0,0,"nin").alignTo(current_sprite,Phaser.RIGHT_TOP,31);this.chakraUI.add(current_sprite);current_sprite=game.add.sprite(0,0,"gen").alignTo(current_sprite,Phaser.RIGHT_TOP,31);this.chakraUI.add(current_sprite);current_sprite=game.add.sprite(0,0,"random").alignTo(current_sprite,Phaser.RIGHT_TOP,31);this.chakraUI.add(current_sprite);}
addChakraText(game){this.taiText=game.add.text(305,54,"x"+this.value[0],Arena.Global.Constants.style_black);this.bloodText=game.add.text(0,0,"x"+this.value[1],Arena.Global.Constants.style_black).alignTo(this.taiText,Phaser.RIGHT_TOP,25);this.ninText=game.add.text(0,0,"x"+this.value[2],Arena.Global.Constants.style_black).alignTo(this.bloodText,Phaser.RIGHT_TOP,25);this.genText=game.add.text(0,0,"x"+this.value[3],Arena.Global.Constants.style_black).alignTo(this.ninText,Phaser.RIGHT_TOP,25);this.randomText=game.add.text(0,0,"x"+this.getTotalChakra(),Arena.Global.Constants.style_black).alignTo(this.genText,Phaser.RIGHT_TOP,25);}
addTextToGroup(){this.chakraUI.add(this.taiText);this.chakraUI.add(this.bloodText);this.chakraUI.add(this.ninText);this.chakraUI.add(this.genText);this.chakraUI.add(this.randomText);}
updateUI(){this.taiText.setText("x"+this.value[0]);this.bloodText.setText("x"+this.value[1]);this.ninText.setText("x"+this.value[2]);this.genText.setText("x"+this.value[3]);this.randomText.setText("x"+this.getTotalChakra());}}
Arena.Chakra=Chakra;})(Arena||(Arena={}));var Arena;(function(Arena){class Game extends Phaser.Game{constructor(elementName){let element=document.getElementById(elementName);super(Arena.Global.Constants.gameWidth,Arena.Global.Constants.gameHeight,Phaser.AUTO,element.id,Arena.State.Blank);this.state.add("play",Arena.State.Play);}
connect(connectionDetails,callback){Arena.Global.socket=io.connect(Arena.Global.Constants.serverUrl,{query:`name=${connectionDetails.name}&title=${connectionDetails.title}`});Arena.Global.socket.on("turn",(turn)=>{connectionDetails.turn=turn;console.log(turn);});Arena.Global.socket.on("start-battle",(opponent)=>{connectionDetails.opponentID=opponent;this.state.start("play");$("#game").show();callback(Arena.Global.socket);});Arena.Global.connectionDetails=connectionDetails;}}
Arena.Game=Game;})(Arena||(Arena={}));var Arena;(function(Arena){class player extends Arena.ArenaObject{constructor(details,char1,char2,char3){super();this.name=this.display_name=Arena.Global.Constants.player_name;this.description="Ultimate Gamer";this.characters=[];this.characters.push(Arena.Characters.character.createCharacter(1,char1));this.characters.push(Arena.Characters.character.createCharacter(2,char2));this.characters.push(Arena.Characters.character.createCharacter(3,char3));}
damage(game,i){this.characters[i].damageHealth(game,20);}
preloadImages(game){this.loadImage(game,"assets/");for(let i=0;i<=2;i++){const path=`assets/characters/${this.characters[i].getName}/`;this.characters[i].loadImage(game,path);for(let j=0;j<this.characters[i].skills_number;j++)
this.characters[i].skills_list[j].loadImage(game,path);}}
deployPortraits(game,side){this.deployPortrait(game,side);for(let i=1;i<=3;i++)
this.characters[i-1].deployPortrait(game,side);this.initHealth(game,side);}
deployPortrait(game,side){if(side=="left"){this.sprite=game.add.sprite(Arena.Global.Constants.leftPlayerX,Arena.Global.Constants.PlayerY,this.name);let text=game.add.text(Arena.Global.Constants.leftPlayerTextX,Arena.Global.Constants.PlayerNameY,this.display_name.toUpperCase(),Arena.Global.Constants.player_red);text.setTextBounds(0,0);text.boundsAlignH="right";let title=game.add.text(Arena.Global.Constants.leftPlayerTextX,Arena.Global.Constants.PlayerTitleY,this.description.toUpperCase(),Arena.Global.Constants.style_black);title.setTextBounds(0,0);title.boundsAlignH="right";}
else{this.sprite=game.add.sprite(Arena.Global.Constants.rightPlayerX,Arena.Global.Constants.PlayerY,this.name);let text=game.add.text(Arena.Global.Constants.rightPlayerTextX,Arena.Global.Constants.PlayerNameY,this.display_name.toUpperCase(),Arena.Global.Constants.player_red);let title=game.add.text(Arena.Global.Constants.rightPlayerTextX,Arena.Global.Constants.PlayerTitleY,this.description.toUpperCase(),Arena.Global.Constants.style_black);}
this.sprite.scale.setTo(0.65);this.addTapEvent(game);}
initHealth(game,side){let x,y;y=Arena.Global.Constants.hpFirstY;if(side=="left")
x=Arena.Global.Constants.hpLeftX;else
x=Arena.Global.Constants.hpRightX;for(let i=0;i<=2;i++){this.characters[i].initHealth(game,x,y+Arena.Global.Constants.hpIncrementY*i);}}
deploySkills(game){let y=Arena.Global.Constants.firstSkillY;for(let i=0;i<=2;i++){let j=0;let skill=(this.characters[i].skills_list[0].setSprite=game.add.sprite(Arena.Global.Constants.firstSkillX,y,`${this.characters[i].getName}-${j}`));this.characters[i].skills_list[0].addTapEvent(game);for(j=1;j<4;j++){skill=this.characters[i].skills_list[j].setSprite=game.add.sprite(0,0,`${this.characters[i].getName}-${j}`).alignTo(skill,Phaser.RIGHT_TOP,8);this.characters[i].skills_list[j].addTapEvent(game);}
y+=Arena.Global.Constants.skillDistanceY;}}}
Arena.player=player;})(Arena||(Arena={}));var Arena;(function(Arena){var Characters;(function(Characters){class character extends Arena.ArenaObject{constructor(order){super();this.character_order=order;this.state=1;this.skills_list=[];}
deployPortrait(game,side){let y;switch(this.character_order){case 1:y=Arena.Global.Constants.firstCharacterY;break;case 2:y=Arena.Global.Constants.secondCharacterY;break;case 3:y=Arena.Global.Constants.thirdCharacterY;break;}
if(side=="left")
this.sprite=game.add.sprite(Arena.Global.Constants.leftCharacterX,y,this.name);else{this.sprite=game.add.sprite(Arena.Global.Constants.rightCharacterX+75,y,this.name);this.sprite.scale.x*=-1;}
this.addTapEvent(game);}
static createCharacter(new_order,char_name){switch(char_name){case"ritsu":return new Characters.Ritsu(new_order);case"hiyori":return new Characters.Hiyori(new_order);case"yoroi":return new Characters.Yoroi(new_order);}}
initHealth(game,x,y){this.sprite.maxHealth=100;this.sprite.health=100;this.health_bar=new Characters.healthbar(game,x,y);this.health_bar.setPercent(100);this.health_text=game.add.text(x,y-7,`${this.sprite.health}/${this.sprite.maxHealth}`,Arena.Global.Constants.style_black_small);this.health_text.setTextBounds(0,0);this.health_text.boundsAlignH="center";}
damageHealth(game,value){this.sprite.damage(value);this.health_bar.setPercent(this.sprite.health);this.health_text.setText(`${this.sprite.health}/${this.sprite.maxHealth}`,true);}}
Characters.character=character;let character_state;(function(character_state){character_state[character_state["alive"]=1]="alive";character_state[character_state["stunned"]=2]="stunned";character_state[character_state["invulnerable"]=3]="invulnerable";character_state[character_state["dead"]=4]="dead";})(character_state=Characters.character_state||(Characters.character_state={}));})(Characters=Arena.Characters||(Arena.Characters={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Characters;(function(Characters){class healthbar{constructor(new_game,x,y){this.setPercent=function(newValue){if(newValue<0)
newValue=0;if(newValue>100)
newValue=100;let newWidth=newValue*this.width/100;this.setWidth(newWidth);};this.game=new_game;this.configure(x,y);this.drawBackground();this.drawHealthBar();}
configure(new_x,new_y){this.width=75;this.height=14;this.x=new_x;this.y=new_y;this.bg_color="#fff";this.bar_color="#3ad949";this.animationDuration=200;}
drawBackground(){const bmd=this.game.add.bitmapData(this.width,this.height);bmd.ctx.fillStyle=this.bg_color;bmd.ctx.beginPath();bmd.ctx.rect(0,0,this.width,this.height);bmd.ctx.fill();bmd.update();this.bgSprite=this.game.add.sprite(this.x,this.y,bmd);this.bgSprite.anchor.set(0.5);}
drawHealthBar(){const bmd=this.game.add.bitmapData(this.width,this.height);bmd.ctx.fillStyle=this.bar_color;bmd.ctx.beginPath();bmd.ctx.rect(0,0,this.width,this.height);bmd.ctx.fill();bmd.update();this.barSprite=this.game.add.sprite(this.x-this.bgSprite.width/2,this.y,bmd);this.barSprite.anchor.y=0.5;}
setWidth(newWidth){this.game.add.tween(this.barSprite).to({width:newWidth},this.animationDuration,Phaser.Easing.Linear.None,true);}}
Characters.healthbar=healthbar;})(Characters=Arena.Characters||(Arena.Characters={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Characters;(function(Characters){class Hiyori extends Characters.character{constructor(order){super(order);this.name="hiyori";this.display_name="Sarugaki Hiyori";this.description="The former lieutenant of the 12th Division, Hiyori is a short-tempered, festering girl with very violent tendencies.";this.skills_number=4;this.skills_list.push(new Characters.skill(0,"hiyori","Flying Kick","Hiyori kicks the shit out of the enemy."));this.skills_list.push(new Characters.skill(1,"hiyori","Serpent Strike","Hiyori unleashes her shikai, Kubikiri Orochi."));this.skills_list.push(new Characters.skill(2,"hiyori","Sweeping Cero","Hiyori unleashes a powerful cero."));this.skills_list.push(new Characters.skill(3,"hiyori","Serpent Parry","Hiyori parries one enemy's attack."));}}
Characters.Hiyori=Hiyori;})(Characters=Arena.Characters||(Arena.Characters={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Characters;(function(Characters){class Ritsu extends Characters.character{constructor(order){super(order);this.name="ritsu";this.display_name="Tainaka Ritsu";this.description="Self-appointed president of the Light Music Club, and the drummer of the band Ho-kago Tea Time.";this.skills_number=4;this.skills_list.push(new Characters.skill(0,"ritsu","Drums Release","Ritsu unleashes her drumming skills, dealing more damage with every attack. Ritsu deals 20 physical damage to one enemy. This skill will deal 5 more physical damage every time it is used."));this.skills_list.push(new Characters.skill(1,"ritsu","All Out","Ritsu and her band perform a song together. Ritsu deals 35 reiatsu damage to one enemy and gains 1 random reiatsu. This skill will deal 5 more reiatsu damage every time it is used."));this.skills_list.push(new Characters.skill(2,"ritsu","Final Song","Ritsu performs her final song, 'No, Thank You!'. For 3 turns, Ritsu's attacks will pierce and will deal 10 more damage. Ritsu will also gain 25 destructible defense that stacks. This skill cannot be used while active."));this.skills_list.push(new Characters.skill(3,"ritsu","Sky High","This skill makes Tainaka Ritsu invulnerable for 1 turn."));}}
Characters.Ritsu=Ritsu;})(Characters=Arena.Characters||(Arena.Characters={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Characters;(function(Characters){class skill extends Arena.ArenaObject{constructor(new_id,new_name,new_display_name,new_description){super();this.id=new_id;this.name=`${new_name}-${this.id}`;this.description=new_description;this.display_name=new_display_name;}
deploySkill(game,character_order){let y=Arena.Global.Constants.firstSkillY;let j=0;}
set setSprite(new_sprite){this.sprite=new_sprite;this.sprite.scale.setTo(0.72);}}
Characters.skill=skill;})(Characters=Arena.Characters||(Arena.Characters={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Characters;(function(Characters){class Yoroi extends Characters.character{constructor(order){super(order);this.name="yoroi";this.display_name="Akadou Yoroi";this.description="The best character to be ever created.";this.skills_number=4;this.skills_list.push(new Characters.skill(0,"yoroi","Chidori","Yoroi is the best."));this.skills_list.push(new Characters.skill(1,"yoroi","Kirin","No, seriously."));this.skills_list.push(new Characters.skill(2,"yoroi","Sharingan","You should respect him."));this.skills_list.push(new Characters.skill(3,"yoroi","Vodovorot","Oh my god he is so shitty..."));}}
Characters.Yoroi=Yoroi;})(Characters=Arena.Characters||(Arena.Characters={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Global;(function(Global){class Constants{static get serverUrl(){if(window.location.href==="http://127.0.0.1:8080/"||window.location.href==="http://localhost:8080/"){return"http://localhost:9001";}
else{return"http://naruto-arena.com";}}}
Constants.gameHeight=560;Constants.gameWidth=770;Constants.char1="ritsu";Constants.char2="hiyori";Constants.char3="yoroi";Constants.player_name="yabashiri";Constants.rightPlayerX=506;Constants.leftPlayerX=224;Constants.PlayerY=10;Constants.leftPlayerTextX=214;Constants.rightPlayerTextX=566;Constants.PlayerNameY=23;Constants.PlayerTitleY=44;Constants.leftCharacterX=33;Constants.rightCharacterX=660;Constants.firstCharacterY=64;Constants.secondCharacterY=185;Constants.thirdCharacterY=306;Constants.unknownX=125;Constants.firstSkillY=99.5;Constants.firstSkillX=202;Constants.skillDistanceY=121;Constants.descX=365;Constants.descY=467;Constants.descTitleY=452;Constants.descWidth=380;Constants.descImageX=279;Constants.descImageY=454;Constants.hpLeftX=70.5;Constants.hpRightX=697.5;Constants.hpFirstY=150;Constants.hpIncrementY=121;Constants.style_black={font:"bold 14px Trebuchet MS",fill:"#000",align:"left"};Constants.style_black_small={font:"bold 11px Trebuchet MS",fill:"#000",align:"left"};Constants.style_red={font:"bold 14px Trebuchet MS",fill:"#ba1a1c",align:"left"};Constants.player_red={font:"bold 18px Trebuchet MS",fill:"#ba1a1c"};Global.Constants=Constants;})(Global=Arena.Global||(Arena.Global={}));})(Arena||(Arena={}));var Arena;(function(Arena){var Global;(function(Global){})(Global=Arena.Global||(Arena.Global={}));})(Arena||(Arena={}));var Arena;(function(Arena){var State;(function(State){class Blank extends Phaser.State{preload(){}
create(){}}
State.Blank=Blank;})(State=Arena.State||(Arena.State={}));})(Arena||(Arena={}));var Arena;(function(Arena){var State;(function(State){class Play extends Phaser.State{preload(){this.you=new Arena.player(Arena.Global.connectionDetails,Arena.Global.Constants.char1,Arena.Global.Constants.char2,Arena.Global.Constants.char3);this.you.preloadImages(this.game);this.opponent=new Arena.player(Arena.Global.connectionDetails,Arena.Global.Constants.char2,Arena.Global.Constants.char1,Arena.Global.Constants.char3);this.opponent.preloadImages(this.game);this.preloadChakra();this.game.load.image("battle","assets/battle1.jpg");this.game.load.image("pokemon","assets/pokemon.png");}
preloadChakra(){this.game.load.image("tai","assets/chakra/tai.png");this.game.load.image("blood","assets/chakra/blood.png");this.game.load.image("nin","assets/chakra/nin.png");this.game.load.image("gen","assets/chakra/gen.png");this.game.load.image("random","assets/chakra/random.png");}
create(){this.game.stage.backgroundColor="#fff";this.game.add.image(0,0,"pokemon");this.you.deployPortraits(this.game,"left");this.opponent.deployPortraits(this.game,"right");this.you.deploySkills(this.game);Play.initDescription(this);this.game.stage.disableVisibilityChange=true;this.chakra=new Arena.Chakra();this.chakra.addChakraUI(this.game);this.initTurnText();this.onTurnSwitch();}
initTurnText(){this.turn_text=this.game.add.text(325,10,this.turnTextResolve(),Arena.Global.Constants.style_black);this.turn_text.inputEnabled=Arena.Global.connectionDetails.turn;}
onTurnSwitch(){this.turn_text.events.onInputUp.add(()=>{Arena.Global.socket.emit("turn-switch",Arena.Global.connectionDetails.opponentID);Arena.Global.connectionDetails.turn=!Arena.Global.connectionDetails.turn;this.turn_text.setText(this.turnTextResolve());this.turn_text.inputEnabled=Arena.Global.connectionDetails.turn;},this);Arena.Global.socket.on("turn-switch",()=>{Arena.Global.connectionDetails.turn=!Arena.Global.connectionDetails.turn;this.turn_text.setText(this.turnTextResolve());this.turn_text.inputEnabled=Arena.Global.connectionDetails.turn;this.chakra.addTurnChakra();this.chakra.updateUI();});}
turnTextResolve(){if(Arena.Global.connectionDetails.turn==true)
return"PRESS WHEN READY";else
return"OPPONENT'S TURN";}
static initDescription(play){Play.description_name=play.game.add.text(Arena.Global.Constants.descX,Arena.Global.Constants.descTitleY,play.you.getDisplayName.toUpperCase(),Arena.Global.Constants.style_red);Play.description=play.game.add.text(Arena.Global.Constants.descX,Arena.Global.Constants.descY,play.you.getDescription.toUpperCase(),Arena.Global.Constants.style_black_small);Play.descriptionImage=play.game.add.sprite(Arena.Global.Constants.descImageX,Arena.Global.Constants.descImageY,"yabashiri");}
static updateDescription(object,game){this.description_name.setText(object.getDisplayName.toUpperCase());this.description.setText(object.getDescription.toUpperCase());this.description.wordWrap=true;this.description.wordWrapWidth=Arena.Global.Constants.descWidth;this.description.lineSpacing=-6;this.descriptionImage.destroy();this.descriptionImage=game.add.sprite(Arena.Global.Constants.descImageX,Arena.Global.Constants.descImageY,object.getName);}}
State.Play=Play;})(State=Arena.State||(Arena.State={}));})(Arena||(Arena={}));